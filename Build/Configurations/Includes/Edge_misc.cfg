// Door making
// makedoortrack is not given here because it depends on available textures
doormaking_doom
{
	makedooraction = 1;		// See linedeftypes
}

doormaking_hexen
{
	makedooraction = 202;	// See linedeftypes
	makedooractivate = 1024;
	makedoorflags { 512; }
	makedoorarg0 = 0;
	makedoorarg1 = 16;
	makedoorarg2 = 0;
	makedoorarg3 = 34;
	makedoorarg4 = 0;
}

// Special linedefs
speciallinedefs_doomhexen
{
	singlesidedflag = 1;	// See linedefflags
	doublesidedflag = 4;	// See linedefflags
	impassableflag = 1;
	upperunpeggedflag = 8;
	lowerunpeggedflag = 16;
}


// ***********************************************************
// *                                                         *
// *                       Text map format                   *
// *                                                         *
// ***********************************************************

mapformat_udmf
{
	// The format interface handles the map data format
	formatinterface = "UniversalMapSetIO";

	//mxd. The default script compiler to use
	defaultscriptcompiler = "zdoom_acs.cfg"; 

	// Enables support for long (> 8 chars) texture names
	// WARNING: this should only be enabled for UDMF game configurations!
	// WARNING: enabling this will make maps incompatible with Doom Builder 2 and can lead to problems in Slade 3!
	longtexturenames = true;

	// Enables support for individual offsets of upper/middle/lower sidedef textures
	localsidedeftextureoffsets = true;
	
	// Default nodebuilder configurations
	defaultsavecompiler = "zdbsp_udmf_normal";
	defaulttestcompiler = "zdbsp_udmf_fast";
	
	engine = "zdoom"; // override that so that DB2 uses the correct namespace

	maplumpnames
	{
		include("UDMF_misc.cfg", "udmfmaplumpnames_begin");
		include("ZDoom_misc.cfg", "udmfmaplumpnames");
		include("UDMF_misc.cfg", "udmfmaplumpnames_end");
	}

	universalfields
	{
		include("ZDoom_misc.cfg", "universalfields");
	}

	// When this is set to true, sectors with the same tag will light up when a line is highlighted
	linetagindicatesectors = false;

	// Special linedefs
	include("ZDoom_misc.cfg", "speciallinedefs_udmf");

	// Default flags for first new thing
	defaultthingflags
	{
		include("ZDoom_misc.cfg", "defaultthingflags_udmf");
	}

	// Door making
	include("ZDoom_misc.cfg", "doormaking_udmf");

	// Generalized actions
	generalizedlinedefs = false;

	// SECTOR FLAGS
	sectorflags
	{
		include("UDMF_misc.cfg", "sectorflags");
	}
	
	// Sector portal flags (ceiling)
	ceilingportalflags
	{
		portal_ceil_disabled = "Disabled";
		portal_ceil_blocksound = "Block sound";
		portal_ceil_nopass = "Impassable";
		portal_ceil_norender = "Not rendered";
	}
	
	// Sector portal flags (floor)
	floorportalflags
	{
	  portal_floor_disabled = "Disabled";
		portal_floor_blocksound = "Block sound";
		portal_floor_nopass = "Impassable";
		portal_floor_norender = "Not rendered";
	}
	
	// Sector portal renderstyles
	sectorportalrenderstyles
	{
		translucent = "Translucent";
		additive = "Additive";
	}
	
	// DEFAULT SECTOR BRIGHTNESS LEVELS
	sectorbrightness
	{
		include("ZDoom_misc.cfg", "sectorbrightness");
	}

	// SECTOR TYPES
	sectortypes
	{
		include("ZDoom_sectors.cfg", "zdoom");
	}

	// SECTOR RENSERSTYLES
	sectorrenderstyles
	{
		include("UDMF_misc.cfg", "sectorrenderstyles");
	}

	// LINEDEF FLAGS
	linedefflags
	{
		include("ZDoom_misc.cfg", "linedefflags_udmf");
	}

	// LINEDEF ACTIVATIONS
	linedefactivations
	{
		include("ZDoom_misc.cfg", "linedefactivations_udmf");
	}
	
	//mxd. Linedef flags UDMF translation table
	// This is needed for copy/paste and prefabs to work properly
	// When the UDMF field name is prefixed with ! it is inverted
	linedefflagstranslation
	{
		include("Doom_misc.cfg", "linedefflagstranslation");
		include("Hexen_misc.cfg", "linedefflagstranslation");
		include("ZDoom_misc.cfg", "linedefflagstranslation");
	} 

	// LINEDEF RENSERSTYLES
	linedefrenderstyles
	{
		include("UDMF_misc.cfg", "linedefrenderstyles");
	}

	//SIDEDEF FLAGS
	sidedefflags
	{
		include("UDMF_misc.cfg", "sidedefflags");  
	}

	// THING FLAGS
	thingflags
	{
		include("UDMF_misc.cfg", "thingflags");
		include("ZDoom_misc.cfg", "thingflags_udmf");
	}
	
	// THING RENSERSTYLES
	thingrenderstyles
	{
		include("UDMF_misc.cfg", "thingrenderstyles");
	}

	// How to compare thing flags (for the stuck things error checker)
	thingflagscompare
	{
		include("UDMF_misc.cfg", "thingflagscompare");
		include("ZDoom_misc.cfg", "thingflagscompare_udmf");
	}

	//mxd. Thing flags UDMF translation table
	// This is needed for copy/paste and prefabs to work properly
	// When the UDMF field name is prefixed with ! it is inverted
	thingflagstranslation
	{
		include("Doom_misc.cfg", "thingflagstranslation");
		include("Hexen_misc.cfg", "thingflagstranslation");
		include("ZDoom_misc.cfg", "thingflagstranslation");
	}

	// Things flags masks
	include("Hexen_misc.cfg", "thingflagsmasks");

	// LINEDEF TYPES
	linedeftypes
	{
		include("Hexen_linedefs.cfg");
		include("ZDoom_linedefs.cfg", "zdoom");
		include("ZDoom_linedefs.cfg", "udmf");
	}

}